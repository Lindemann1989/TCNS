cmake_minimum_required(VERSION 2.8.3)
project(hybrid_controller)

add_compile_options(-std=c++11)

find_package(catkin REQUIRED roscpp message_generation formula_parser)
find_package(Boost REQUIRED)
find_package(Armadillo REQUIRED)



add_message_files(
  FILES
  BarrierFunction.msg
)

generate_messages(
  DEPENDENCIES
  std_msgs
)

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES BC
  CATKIN_DEPENDS message_runtime formula_parser
#  DEPENDS 
)

include_directories(
 include
  ${catkin_INCLUDE_DIRS}
  ${ARMADILLO_INCLUDE_DIRS}
  ${Boost_INCLUDE_DIRS}
  ${formula_parser_INCLUDE_DIRS}
)


#add_executable(solver src/solver.c)

#target_link_libraries(test_solver
#	${catkin_LIBRARIES}
#)

#add_library(solver src/solver.c)
#add_subdirectory(solver) 
#add_executable(Hybrid_Controller hybrid_controller_node.cpp)
#target_link_libraries(Hybrid_Controller solver)


add_library(BC src/BC.cpp)
target_link_libraries(BC
  -lopenblas
  -llapack
  ${ARMADILLO_LIBRARIES}
)

add_library(PFC src/PFC.cpp)
target_link_libraries(PFC
  -lopenblas
  -llapack
  ${ARMADILLO_LIBRARIES}
)

add_library(solver cvxgen/ldl.c cvxgen/solver.c cvxgen/matrix_support.c cvxgen/util.c)

add_executable(${PROJECT_NAME}_node src/hybrid_controller_node.cpp)
target_link_libraries(${PROJECT_NAME}_node
  ${catkin_LIBRARIES}
  -lopenblas
  -llapack
  ${ARMADILLO_LIBRARIES}
  BC
  ${formula_parser_LIBRARIES}
  PFC
  solver
)
add_dependencies(${PROJECT_NAME}_node ${PROJECT_NAME}_generate_messages_cpp)
